name: Build and Test

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:
  test:
    name: Runs Tests

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.11"]
      max-parallel: 5

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v3
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements-dev.txt') }}
    - name: Install dependencies
      run: |
        make install-dev
    - name: Linting/formatting check
      run: |
        make format
    - name: Test with pytest
      run: |
        echo ${{ matrix.os }}
        echo ${{ matrix.python-version }}
        make test
    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      if: ${{(matrix.os == 'ubuntu-latest')  &&  (matrix.python-version == '3.11')}}
      with:
        name: code-coverage-report
        path: coverage.xml
        retention-days: 1

  write_coverage:
    name: Write Code Coverage
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
    - name: Download Code Coverage
      uses: actions/download-artifact@v3
      with:
        name: code-coverage-report
    - name: Pytest coverage comment
      id: commentCoverage
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-xml-coverage-path: ./coverage.xml
        badge-title: opendataval Coverage Badge
        title: opendataval Coverage Report
        hide-comment: false

  commit_coverage:
    name: Commit code coverage report
    needs: [write_coverage]
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Update badge in Readme
      run: |
        echo ${{ needs.write_coverage.steps.commentCoverage.outputs.coverageHtml }}
        # Really long command, adds badge with color and coverage between markers in README.md
        sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n![Coverage](https://img.shields.io/badge/Coverage-${{needs.write_coverage.steps.commentCoverage.outputs.coverage}}25-${{needs.write_coverage.steps.commentCoverage.outputs.color}}.svg?style=for-the-badge)\n<!-- Pytest Coverage Comment:End -->' ./README.md

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Update coverage badge on Readme
        add_options: '-u'
        commit_options: '--no-verify'

